<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title><![CDATA[Tag: Jekyll | 记往开来]]></title>
<link href="http://xiaoliuai.github.io/tags/jekyll/atom.xml" rel="self"/>
<link href="http://xiaoliuai.github.io/"/>
<updated>2015-02-06T12:36:17+01:00</updated>
<id>http://xiaoliuai.github.io/</id>
<author>
<name><![CDATA[Xiao Liu]]></name>

</author>
<generator uri="http://octopress.org/">Octopress</generator>

<entry>
<title type="html"><![CDATA[Initialize the first blog]]></title>
<link href="http://xiaoliuai.github.io/blog/2014-10-29-initialize-the-first-blog.html"/>
<updated>2014-10-29T00:00:00+01:00</updated>
<id>http://xiaoliuai.github.io/blog/initialize-the-first-blog</id>
<content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. Install necessary softwares <b>org-mode</b> in <b>emacs</b>, <b>jekyll</b>.</a></li>
<li><a href="#sec-2">2. Initialize the web folder by jekyll.</a></li>
<li><a href="#sec-3">3. From org-mode to jekyll</a>
<ul>
<li><a href="#sec-3-1">3.1. Configuration of emacs org setting</a></li>
<li><a href="#sec-3-2">3.2. The head inserted into the org file for blog.</a></li>
<li><a href="#sec-3-3">3.3. Comments</a></li>
</ul>
</li>
<li><a href="#sec-4">4. Build the server.</a></li>
<li><a href="#sec-5">5. Configuration</a></li>
</ul>
</div>
</div>


<p>
This is my first blog that is generated using org-mode, jekyll and is
published on GitHub.
I made this page following the instructions on <a href="http://orgmode.org/worg/org-tutorials/org-jekyll.html">org-jekyll</a>.
</p>




<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><a href="xiaoliuai.github.io/tags/jekyll/atom.xml"><span class="section-number-2">1</span> Install necessary softwares <b>org-mode</b> in <b>emacs</b>, <b>jekyll</b>.</a></h2>
<div class="outline-text-2" id="text-1">
<p>
Note that the built-in org-mode in emacs might be outdated, the best
solution is to remove the built-in org-mode and reinstall it from
the package manager via <code>M-x list-packages</code>. Jekyll can be installed
through <b>RubyGem</b>. On my OSX, the ruby and gem are preinstalled, so
<code>gem install jekyll</code> works for me.
</p>
</div>
</div>


<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Initialize the web folder by jekyll.</h2>
<div class="outline-text-2" id="text-2">
<p>
As my final goal is posting the blog to GitHub, the working folder
of my blog is <code>xiaoliuai.github.io</code>.
</p>
<div class="org-src-container">

<pre class="src src-bash">jekyll new xiaoliuai.github.io
cd xiaoliuai.github.io
jekyll serve
</pre>
</div>
<p>
Then you can see the portal page by opening <code>localhost:4000</code> in
your web browser.
</p>

<p>
Now I would like to introudce the directory hierarchy of jekyll. Since
I will move to octopress, which is a wrapper of jekyll with different
directory setting, I just introduce the essential part to make the
things work.
</p>
<div class="org-src-container">

<pre class="src src-sh">xiaoliuai.github.io/&#57344;&#57345;&#57345;
-- _posts/&#57344;&#57345;&#57345;
-- _sites/&#57344;&#57345;&#57345;
...&#57344;&#57345;&#57345;
</pre>
</div>
<p>
Two main directories need special attention, that are,
<code>_posts</code> and <code>_sites</code>. The first folder contains the <i>source</i> files,
which are markdown file, html file, etc. as input for jekyll; the
second folder contains the generated static server pages. All the
project should be uploaded to github to be displayed where the
<code>index.html</code> file is the portal of web site. The GitHub Pages
understand this directory configuration and will automatically display
the contents in <code>_sites</code>.
</p>
</div>
</div>




<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> From org-mode to jekyll</h2>
<div class="outline-text-2" id="text-3">
</div><div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> Configuration of emacs org setting</h3>
<div class="outline-text-3" id="text-3-1">
<div class="org-src-container">

<pre class="src src-elisp"><span style="color: #657b83;">(</span><span style="color: #2aa198;">"blog-org"</span>&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:base-directory</span> <span style="color: #2aa198;">"~/Emacs/org/blog"</span>&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:base-extension</span> <span style="color: #2aa198;">"org"</span>&#57344;&#57345;&#57345;
&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:publishing-directory</span> <span style="color: #2aa198;">"~/WorkSpace/xiaoliuai.github.io/"</span>&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:recursive</span> t&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:publishing-function</span> org-html-publish-to-html&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:headline-levels</span> 4&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:html-extension</span> <span style="color: #2aa198;">"html"</span>&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:body-only</span> t <span style="color: #93a1a1; font-style: italic;">;; </span><span style="color: #93a1a1; font-style: italic;">Only export section between &lt;body&gt; &lt;/body&gt;</span>&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:with-toc</span> nil <span style="color: #93a1a1; font-style: italic;">;; </span><span style="color: #93a1a1; font-style: italic;">don't export toc, it clobbers the YAML front matter</span>&#57344;&#57345;&#57345;
 <span style="color: #657b83;">)</span>&#57344;&#57345;&#57345;
<span style="color: #657b83;">(</span><span style="color: #2aa198;">"blog-static"</span>&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:base-directory</span> <span style="color: #2aa198;">"~/Emacs/org/blog"</span>&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:base-extension</span> <span style="color: #2aa198;">"css</span><span style="color: #6c71c4;">\\</span><span style="color: #d33682;">|</span><span style="color: #2aa198;">js</span><span style="color: #6c71c4;">\\</span><span style="color: #d33682;">|</span><span style="color: #2aa198;">png</span><span style="color: #6c71c4;">\\</span><span style="color: #d33682;">|</span><span style="color: #2aa198;">jpg</span><span style="color: #6c71c4;">\\</span><span style="color: #d33682;">|</span><span style="color: #2aa198;">gif</span><span style="color: #6c71c4;">\\</span><span style="color: #d33682;">|</span><span style="color: #2aa198;">pdf</span><span style="color: #6c71c4;">\\</span><span style="color: #d33682;">|</span><span style="color: #2aa198;">mp3</span><span style="color: #6c71c4;">\\</span><span style="color: #d33682;">|</span><span style="color: #2aa198;">swf</span><span style="color: #6c71c4;">\\</span><span style="color: #d33682;">|</span><span style="color: #2aa198;">gz</span><span style="color: #6c71c4;">\\</span><span style="color: #d33682;">|</span><span style="color: #2aa198;">txt</span><span style="color: #6c71c4;">\\</span><span style="color: #d33682;">|</span><span style="color: #2aa198;">el"</span>&#57344;&#57345;
 <span style="color: #6c71c4;">:publishing-directory</span> <span style="color: #2aa198;">"~/WorkSpace/xiaoliuai.github.io/"</span>&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:recursive</span> t&#57344;&#57345;&#57345;
 <span style="color: #6c71c4;">:publishing-function</span> org-publish-attachment&#57344;&#57345;&#57345;
 <span style="color: #657b83;">)</span>&#57344;&#57345;&#57345;
<span style="color: #657b83;">(</span><span style="color: #2aa198;">"blog"</span><span style="color: #6c71c4;">:components</span> <span style="color: #2aa198;">(</span><span style="color: #2aa198;">"blog-org"</span> <span style="color: #2aa198;">"blog-static"</span><span style="color: #2aa198;">)</span><span style="color: #657b83;">)</span>&#57344;&#57345;&#57345;
</pre>
</div>
<p>
With this org-mode configuration, you have to create a folder <code>_posts</code>
under the <code>~/Emacs/org/blog</code>, then org-mode will export the folder and
html files into the right place.
</p>
</div>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> The head inserted into the org file for blog.</h3>
<div class="outline-text-3" id="text-3-2">
<div class="org-src-container">

<pre class="src src-org"><span style="color: #93a1a1; font-style: italic;">#+STARTUP: showall indent</span>&#57344;&#57345;&#57345;
<span style="color: #93a1a1; font-style: italic;">#+STARTUP: hidestars</span>&#57344;&#57345;&#57345;
<span style="color: #93a1a1; font-style: italic;">#+BEGIN_HTML</span>&#57344;&#57345;&#57345;
<span style="color: #cb4b16;">---</span>&#57344;&#57345;&#57345;
<span style="color: #cb4b16;">layout: default</span>&#57344;&#57345;&#57345;
<span style="color: #cb4b16;">title: Xiao Liu's First Blog</span>&#57344;&#57345;&#57345;
<span style="color: #cb4b16;">excerpt: First blog with org-mode, jekyll.</span>&#57344;&#57345;&#57345;
<span style="color: #cb4b16;">categories:</span>&#57344;&#57345;&#57345;
<span style="color: #cb4b16;">    - org</span>&#57344;&#57345;&#57345;
<span style="color: #cb4b16;">---</span>&#57344;&#57345;&#57345;
<span style="color: #93a1a1; font-style: italic;">#+END_HTML</span>&#57344;&#57345;&#57345;
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-3-3" class="outline-3">
<h3 id="sec-3-3"><span class="section-number-3">3.3</span> Comments</h3>
<div class="outline-text-3" id="text-3-3">
<p>
The two lines with comments form the main differences to ordinary
html exportation. Jekyll will read the body of html files
generated by org-mode and add it&#8217;s own heads to specify the
styles. Org-mode will export the table of contents (TOC) at the
beginning of exported html file, hence mask the YAML Front
Matter. <a href="http://ccom.uprrp.edu/~humberto//blog/2013/11/03/org-jekyll-is-awesome/">Disable the TOC</a> can sovle this problem. However, there
might be other solutions to change the position of TOC.
</p>
</div>
</div>
</div>




<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Build the server.</h2>
<div class="outline-text-2" id="text-4">
<div class="org-src-container">

<pre class="src src-bash">cd xiaoliuai.github.io
jekyll build
jekyll serve
</pre>
</div>
</div>
</div>




<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> Configuration</h2>
<div class="outline-text-2" id="text-5">
<p>
The simplest personalization of the blog site is editting
<code>_config.yml</code> under the project directory. Following the attribute
names in this file, you can easily understand how to specify the blog
name, description, email address, etc.
</p>
</div>
</div>

]]></content>
</entry>

</feed>
