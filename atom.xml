<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[记往开来]]></title>
  <link href="http://xiaoliuai.github.io/atom.xml" rel="self"/>
  <link href="http://xiaoliuai.github.io/"/>
  <updated>2014-10-27T23:43:50+01:00</updated>
  <id>http://xiaoliuai.github.io/</id>
  <author>
    <name><![CDATA[Xiao Liu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Writing Blog Using Org-mode and Jekyll]]></title>
    <link href="http://xiaoliuai.github.io/blog/2014-10-27-writing-blog-using-org-mode-and-jekyll.html"/>
    <updated>2014-10-27T00:00:00+01:00</updated>
    <id>http://xiaoliuai.github.io/blog/writing-blog-using-org-mode-and-jekyll</id>
    <content type="html"><![CDATA[<p>
This is my first blog that is generated using org-mode, jekyll and is
published on GitHub.
I made this page following the instructions on <a href="http://orgmode.org/worg/org-tutorials/org-jekyll.html">org-jekyll</a>.
</p>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">Initialize the first blog</h2>
<div class="outline-text-2" id="text-1">
</div><div id="outline-container-sec-1-1" class="outline-3">
<h3 id="sec-1-1">Install necessary softwares <b>org-mode</b> in <b>emacs</b>, <b>jekyll</b>.</h3>
<div class="outline-text-3" id="text-1-1">
<p>
Note that the built-in org-mode in emacs might be outdated, the best
solution is to remove the built-in org-mode and reinstall it from
the package manager via <code>M-x list-packages</code>. Jekyll can be installed
through <b>RubyGem</b>. On my OSX, the ruby and gem are preinstalled, so
<code>gem install jekyll</code> works for me.
</p>
</div>
</div>
<div id="outline-container-sec-1-2" class="outline-3">
<h3 id="sec-1-2">Initialize the web folder by jekyll.</h3>
<div class="outline-text-3" id="text-1-2">
<p>
As my final goal is posting the blog to GitHub, the working folder
of my blog is <code>xiaoliuai.github.io</code>.
</p>
<div class="org-src-container">

<pre class="src src-bash">jekyll new xiaoliuai.github.io
cd xiaoliuai.github.io
jekyll serve
</pre>
</div>
<p>
Then you can see the portal page by opening <code>localhost:4000</code> in
your web browser.
</p>

<p>
Now I would like to introudce the directory hierarchy of jekyll. Since
I will move to octopress, which is a wrapper of jekyll with different
directory setting, I just introduce the essential part to make the
things work.
</p>
<div class="org-src-container">

<pre class="src src-sh">xiaoliuai.github.io/
-- _posts/
-- _sites/
...
</pre>
</div>
<p>
Two main directories need special attention, that are,
<code>_posts</code> and <code>_sites</code>. The first folder contains the <i>source</i> files,
which are markdown file, html file, etc. as input for jekyll; the
second folder contains the generated static server pages. All the
project should be uploaded to github to be displayed where the
<code>index.html</code> file is the portal of web site.
</p>
</div>
</div>

<div id="outline-container-sec-1-3" class="outline-3">
<h3 id="sec-1-3">From org-mode to jekyll</h3>
<div class="outline-text-3" id="text-1-3">
</div><div id="outline-container-sec-1-3-1" class="outline-4">
<h4 id="sec-1-3-1">Configuration of emacs org setting</h4>
<div class="outline-text-4" id="text-1-3-1">
<div class="org-src-container">

<pre class="src src-elisp"><span style="color: #52676f;">(</span><span style="color: #259185;">"blog-org"</span>
 <span style="color: #5859b7;">:base-directory</span> <span style="color: #259185;">"~/Emacs/org/blog"</span>
 <span style="color: #5859b7;">:base-extension</span> <span style="color: #259185;">"org"</span>

 <span style="color: #5859b7;">:publishing-directory</span> <span style="color: #259185;">"~/WorkSpace/xiaoliuai.github.io/"</span>
 <span style="color: #5859b7;">:recursive</span> t
 <span style="color: #5859b7;">:publishing-function</span> org-html-publish-to-html
 <span style="color: #5859b7;">:headline-levels</span> 4
 <span style="color: #5859b7;">:html-extension</span> <span style="color: #259185;">"html"</span>
 <span style="color: #5859b7;">:body-only</span> t <span style="color: #81908f; font-style: italic;">;; </span><span style="color: #81908f; font-style: italic;">Only export section between &lt;body&gt; &lt;/body&gt;</span>
 <span style="color: #5859b7;">:with-toc</span> nil <span style="color: #81908f; font-style: italic;">;; </span><span style="color: #81908f; font-style: italic;">don't export toc, it clobbers the YAML front matter</span>
 <span style="color: #52676f;">)</span>
<span style="color: #52676f;">(</span><span style="color: #259185;">"blog-static"</span>
 <span style="color: #5859b7;">:base-directory</span> <span style="color: #259185;">"~/Emacs/org/blog"</span>
 <span style="color: #5859b7;">:base-extension</span> <span style="color: #259185;">"css</span><span style="color: #5859b7; font-weight: bold;">\\</span><span style="color: #c61b6e; font-weight: bold;">|</span><span style="color: #259185;">js</span><span style="color: #5859b7; font-weight: bold;">\\</span><span style="color: #c61b6e; font-weight: bold;">|</span><span style="color: #259185;">png</span><span style="color: #5859b7; font-weight: bold;">\\</span><span style="color: #c61b6e; font-weight: bold;">|</span><span style="color: #259185;">jpg</span><span style="color: #5859b7; font-weight: bold;">\\</span><span style="color: #c61b6e; font-weight: bold;">|</span><span style="color: #259185;">gif</span><span style="color: #5859b7; font-weight: bold;">\\</span><span style="color: #c61b6e; font-weight: bold;">|</span><span style="color: #259185;">pdf</span><span style="color: #5859b7; font-weight: bold;">\\</span><span style="color: #c61b6e; font-weight: bold;">|</span><span style="color: #259185;">mp3</span><span style="color: #5859b7; font-weight: bold;">\\</span><span style="color: #c61b6e; font-weight: bold;">|</span><span style="color: #259185;">swf</span><span style="color: #5859b7; font-weight: bold;">\\</span><span style="color: #c61b6e; font-weight: bold;">|</span><span style="color: #259185;">gz</span><span style="color: #5859b7; font-weight: bold;">\\</span><span style="color: #c61b6e; font-weight: bold;">|</span><span style="color: #259185;">txt</span><span style="color: #5859b7; font-weight: bold;">\\</span><span style="color: #c61b6e; font-weight: bold;">|</span><span style="color: #259185;">el"</span>
 <span style="color: #5859b7;">:publishing-directory</span> <span style="color: #259185;">"~/WorkSpace/xiaoliuai.github.io/"</span>
 <span style="color: #5859b7;">:recursive</span> t
 <span style="color: #5859b7;">:publishing-function</span> org-publish-attachment
 <span style="color: #52676f;">)</span>
<span style="color: #52676f;">(</span><span style="color: #259185;">"blog"</span><span style="color: #5859b7;">:components</span> <span style="color: #259185;">(</span><span style="color: #259185;">"blog-org"</span> <span style="color: #259185;">"blog-static"</span><span style="color: #259185;">)</span><span style="color: #52676f;">)</span>
</pre>
</div>
<p>
With this org-mode configuration, you have to create a folder <code>_posts</code>
under the <code>~/Emacs/org/blog</code>, then org-mode will export the folder and
html files into the right place.
</p>
</div>
</div>

<div id="outline-container-sec-1-3-2" class="outline-4">
<h4 id="sec-1-3-2">The head inserted into the org file for blog.</h4>
<div class="outline-text-4" id="text-1-3-2">
<div class="org-src-container">

<pre class="src src-org"><span style="color: #81908f; font-style: italic;">#+STARTUP: showall indent</span>
<span style="color: #81908f; font-style: italic;">#+STARTUP: hidestars</span>
<span style="color: #81908f; font-style: italic;">#+BEGIN_HTML</span>
<span style="color: #bd3612;">---</span>
<span style="color: #bd3612;">layout: default</span>
<span style="color: #bd3612;">title: Xiao Liu's First Blog</span>
<span style="color: #bd3612;">excerpt: First blog with org-mode, jekyll.</span>
<span style="color: #bd3612;">categories:</span>
<span style="color: #bd3612;">    - org</span>
<span style="color: #bd3612;">---</span>
<span style="color: #81908f; font-style: italic;">#+END_HTML</span>
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-1-3-3" class="outline-4">
<h4 id="sec-1-3-3">Comments</h4>
<div class="outline-text-4" id="text-1-3-3">
<p>
The two lines with comments form the main differences to ordinary
html exportation. Jekyll will read the body of html files
generated by org-mode and add it&#8217;s own heads to specify the
styles. Org-mode will export the table of contents (TOC) at the
beginning of exported html file, hence mask the YAML Front
Matter. <a href="http://ccom.uprrp.edu/~humberto//blog/2013/11/03/org-jekyll-is-awesome/">Disable the TOC</a> can sovle this problem. However, there
might be other solutions to change the position of TOC.
</p>
</div>
</div>
</div>

<div id="outline-container-sec-1-4" class="outline-3">
<h3 id="sec-1-4">Build the server.</h3>
<div class="outline-text-3" id="text-1-4">
<div class="org-src-container">

<pre class="src src-bash">cd xiaoliuai.github.io
jekyll build
jekyll serve
</pre>
</div>
</div>
</div>

<div id="outline-container-sec-1-5" class="outline-3">
<h3 id="sec-1-5">Configuration</h3>
<div class="outline-text-3" id="text-1-5">
<p>
The simplest personalization of the blog site is editting
<code>_config.yml</code> under the project directory. Following the attribute
names in this file, you can easily understand how to specify the blog
name, description, email address, etc.
</p>
</div>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2">There are lisp packages in elpa that provide smart org-jekyll edit functions.</h2>
</div>
<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3">Future work <code>[0/3]</code></h2>
<div class="outline-text-2" id="text-3">
<ul class="org-ul">
<li><code>[&#xa0;]</code> This blog is generated manually with many copy paste
operations. The next step after successfully display this blog is
setting automatic tools (YASnippet) to generate the blog files
with date and insert the configured headers.
</li>

<li><code>[&#xa0;]</code> In <a href="http://orgmode.org/worg/org-tutorials/org-jekyll.html">org-jekyll</a>, YAML markup is mentioned many times. I have to
study into it when I have time.
</li>

<li><code>[&#xa0;]</code> Complete this blog into a full manual of org-jekyll-emacs
relative settings.
</li>
</ul>


<p>
<!-- more -->
</p>
</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Org-mode and Octopress]]></title>
    <link href="http://xiaoliuai.github.io/blog/2014-10-27-org-mode-and-octopress.html"/>
    <updated>2014-10-27T00:00:00+01:00</updated>
    <id>http://xiaoliuai.github.io/blog/org-mode-and-octopress</id>
    <content type="html"><![CDATA[<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1. Writing Blog Using Org-mode and Octopress</a></li>
<li><a href="#sec-2">2. Octopress Installation</a>
<ul>
<li><a href="#sec-2-1">2.1. Installation of old version ruby with rbenv</a></li>
<li><a href="#sec-2-2">2.2. Setup the octopress</a>
<ul>
<li><a href="#sec-2-2-1">2.2.1. Setup</a></li>
<li><a href="#sec-2-2-2">2.2.2. Dirctory structure comments</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#sec-3">3. Emacs Configuration</a>
<ul>
<li><a href="#sec-3-1">3.1. Org-octopress package</a></li>
<li><a href="#sec-3-2">3.2. <span class="todo TODO">TODO</span> <code>[0/3]</code></a></li>
</ul>
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Writing Blog Using Org-mode and Octopress</h2>
<div class="outline-text-2" id="text-1">
<p>
After the installation  and the configuration of jekyll along with
the org-mode. I tried to find some configurations to facilitate the
creation of org files (create file with date in front of file name,
insert heads, etc.) I did not realize the existence of relative
emacs packages in elpa and asked google for solutions. My
inefficient search key-words let the google returns undisired
answser: the <b>octopress</b>. Octopress is based on the jekyll, but
provide richer blog settings. Finally, I migrated to octopress and
use it to manager my github pages.
</p>
</div>
</div>

<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Octopress Installation</h2>
<div class="outline-text-2" id="text-2">
<p>
Installation of octopress is little complexe since it requires low
version ruby.
</p>
</div>

<div id="outline-container-sec-2-1" class="outline-3">
<h3 id="sec-2-1"><span class="section-number-3">2.1</span> Installation of old version ruby with rbenv</h3>
<div class="outline-text-3" id="text-2-1">
<p>
You can following the instructions on the <a href="http://octopress.org/docs/setup/rbenv">official manual</a>.
</p>
</div>
</div>

<div id="outline-container-sec-2-2" class="outline-3">
<h3 id="sec-2-2"><span class="section-number-3">2.2</span> Setup the octopress</h3>
<div class="outline-text-3" id="text-2-2">
<p>
My setup expierence is basically the same with the <a href="http://octopress.org/docs/setup/">official
manual</a>. However, after the installation, I replaced the octopress
directory to <code>~/WorkSpace/xiaoliuai.github.io</code> because it actually
becomes the repository of my github pages (<b>magnific!</b>). So I
suggest to clone the octopress git repository into the directory
with the same name of the repository of your github pages at the
beginning.
</p>
</div>

<div id="outline-container-sec-2-2-1" class="outline-4">
<h4 id="sec-2-2-1"><span class="section-number-4">2.2.1</span> Setup</h4>
<div class="outline-text-4" id="text-2-2-1">
<ul class="org-ul">
<li>Copy octopress repository (<sub>I</sub> suggest to clone shallow copy with
option =depth=_)
<div class="org-src-container">

<pre class="src src-sh">git clone git://github.com/imathis/octopress.git octopress
<span style="color: #5859b7;">cd</span> octopress
</pre>
</div>
</li>
<li>Install dependencies
<div class="org-src-container">

<pre class="src src-sh">gem install bundler
rbenv rehash    <span style="color: #81908f; font-style: italic;"># </span><span style="color: #81908f; font-style: italic;">If you use rbenv, rehash to be able to run the bundle command</span>
bundle install
</pre>
</div>
</li>
<li>Install the default theme (<sub>I</sub> suggest to ignore this step and
install the 3rd-party theme directly_)
<div class="org-src-container">

<pre class="src src-sh">rake install
</pre>
</div>
</li>
<li>Install the 3rd-party theme (optional)
</li>
<li>Add 3rd-party tools (optional)
</li>
</ul>
</div>
</div>

<div id="outline-container-sec-2-2-2" class="outline-4">
<h4 id="sec-2-2-2"><span class="section-number-4">2.2.2</span> Dirctory structure comments</h4>
</div>
</div>
</div>

<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Emacs Configuration</h2>
<div class="outline-text-2" id="text-3">
</div><div id="outline-container-sec-3-1" class="outline-3">
<h3 id="sec-3-1"><span class="section-number-3">3.1</span> Org-octopress package</h3>
</div>

<div id="outline-container-sec-3-2" class="outline-3">
<h3 id="sec-3-2"><span class="section-number-3">3.2</span> <span class="todo TODO">TODO</span> <code>[0/3]</code></h3>
<div class="outline-text-3" id="text-3-2">
<ul class="org-ul">
<li><code>[&#xa0;]</code> tags
</li>
<li><code>[&#xa0;]</code> automatically inserted categories
</li>
<li><code>[&#xa0;]</code> functions of contents in setupfile.org
</li>
</ul>
<p>

</p>
</div>
</div>
</div>
]]></content>
  </entry>
  
</feed>
